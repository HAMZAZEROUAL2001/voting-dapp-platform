# Script PowerShell pour d√©marrer le projet multi-applications

Write-Host "üöÄ D√©marrage du Projet Multi-Applications" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green

# Fonction pour v√©rifier si Docker est install√©
function Test-Docker {
    try {
        docker --version | Out-Null
        Write-Host "‚úÖ Docker trouv√©" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "‚ùå Docker n'est pas install√©. Veuillez installer Docker first." -ForegroundColor Red
        exit 1
    }
}

# Fonction pour v√©rifier si Node.js est install√©
function Test-Node {
    try {
        node --version | Out-Null
        Write-Host "‚úÖ Node.js trouv√©" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "‚ö†Ô∏è  Node.js n'est pas install√©. La DApp ne pourra pas √™tre lanc√©e." -ForegroundColor Yellow
        return $false
    }
}

# D√©marrer la biblioth√®que
function Start-Library {
    Write-Host ""
    Write-Host "üìö D√©marrage de la Biblioth√®que Personnelle..." -ForegroundColor Cyan
    
    docker-compose up -d
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Biblioth√®que lanc√©e avec succ√®s !" -ForegroundColor Green
        Write-Host "   - Backend: http://localhost:5000" -ForegroundColor White
        Write-Host "   - Frontend: http://localhost:8080" -ForegroundColor White
    }
    else {
        Write-Host "‚ùå Erreur lors du lancement de la biblioth√®que" -ForegroundColor Red
    }
}

# D√©marrer la DApp
function Start-DApp {
    Write-Host ""
    Write-Host "üó≥Ô∏è  D√©marrage de la DApp de Vote..." -ForegroundColor Cyan
    
    Set-Location solidity-dapp
    
    # Installer les d√©pendances si n√©cessaire
    if (!(Test-Path "node_modules")) {
        Write-Host "üì¶ Installation des d√©pendances Hardhat..." -ForegroundColor Yellow
        npm install
    }
    
    if (!(Test-Path "frontend/node_modules")) {
        Write-Host "üì¶ Installation des d√©pendances React..." -ForegroundColor Yellow
        Set-Location frontend
        npm install
        Set-Location ..
    }
    
    # D√©marrer Hardhat en arri√®re-plan
    Write-Host "üîó D√©marrage du n≈ìud Hardhat..." -ForegroundColor Cyan
    $hardhatJob = Start-Job -ScriptBlock { 
        Set-Location $using:PWD
        npx hardhat node 
    }
    
    # Attendre que Hardhat soit pr√™t
    Start-Sleep -Seconds 8
    
    # D√©ployer le contrat
    Write-Host "üìú D√©ploiement du contrat..." -ForegroundColor Cyan
    npx hardhat run scripts/deploy.js --network localhost
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Contrat d√©ploy√© avec succ√®s !" -ForegroundColor Green
        
        # D√©marrer le frontend React
        Write-Host "‚öõÔ∏è  D√©marrage du frontend React..." -ForegroundColor Cyan
        Set-Location frontend
        $reactJob = Start-Job -ScriptBlock { 
            Set-Location $using:PWD
            npm start 
        }
        Set-Location ..
        
        Write-Host "‚úÖ DApp lanc√©e avec succ√®s !" -ForegroundColor Green
        Write-Host "   - Frontend: http://localhost:3000" -ForegroundColor White
        Write-Host "   - N≈ìud Hardhat: http://localhost:8545" -ForegroundColor White
        
        # Sauvegarder les job IDs
        $hardhatJob.Id | Out-File -FilePath "hardhat.jobid"
        $reactJob.Id | Out-File -FilePath "frontend/react.jobid"
    }
    else {
        Write-Host "‚ùå Erreur lors du d√©ploiement du contrat" -ForegroundColor Red
        Stop-Job $hardhatJob
        Remove-Job $hardhatJob
    }
    
    Set-Location ..
}

# Script principal
function Main {
    Write-Host "V√©rification des pr√©requis..." -ForegroundColor Cyan
    Test-Docker
    
    $nodeAvailable = Test-Node
    
    Write-Host ""
    Write-Host "Que souhaitez-vous lancer ?"
    Write-Host "1) Biblioth√®que Personnelle uniquement"
    Write-Host "2) DApp de Vote uniquement (n√©cessite Node.js)"
    Write-Host "3) Les deux applications"
    Write-Host "4) Quitter"
    
    $choice = Read-Host "Votre choix (1-4)"
    
    switch ($choice) {
        "1" {
            Start-Library
        }
        "2" {
            if ($nodeAvailable) {
                Start-DApp
            }
            else {
                Write-Host "‚ùå Node.js est requis pour la DApp" -ForegroundColor Red
                exit 1
            }
        }
        "3" {
            Start-Library
            if ($nodeAvailable) {
                Start-DApp
            }
            else {
                Write-Host "‚ö†Ô∏è  DApp non lanc√©e (Node.js manquant)" -ForegroundColor Yellow
            }
        }
        "4" {
            Write-Host "Au revoir !" -ForegroundColor Green
            exit 0
        }
        default {
            Write-Host "‚ùå Choix invalide" -ForegroundColor Red
            exit 1
        }
    }
    
    Write-Host ""
    Write-Host "üéâ Applications d√©marr√©es ! Appuyez sur Ctrl+C pour arr√™ter." -ForegroundColor Green
    
    # Attendre l'interruption
    try {
        while ($true) {
            Start-Sleep -Seconds 1
        }
    }
    finally {
        Write-Host ""
        Write-Host "üõë Arr√™t des applications..." -ForegroundColor Yellow
        
        # Arr√™ter Docker
        docker-compose down
        
        # Arr√™ter les jobs Node.js
        if (Test-Path "solidity-dapp/hardhat.jobid") {
            $jobId = Get-Content "solidity-dapp/hardhat.jobid"
            Stop-Job $jobId -ErrorAction SilentlyContinue
            Remove-Job $jobId -ErrorAction SilentlyContinue
            Remove-Item "solidity-dapp/hardhat.jobid" -ErrorAction SilentlyContinue
        }
        
        if (Test-Path "solidity-dapp/frontend/react.jobid") {
            $jobId = Get-Content "solidity-dapp/frontend/react.jobid"
            Stop-Job $jobId -ErrorAction SilentlyContinue
            Remove-Job $jobId -ErrorAction SilentlyContinue
            Remove-Item "solidity-dapp/frontend/react.jobid" -ErrorAction SilentlyContinue
        }
        
        Write-Host "‚úÖ Arr√™t termin√©" -ForegroundColor Green
    }
}

Main